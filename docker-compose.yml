services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: alohawaii-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: alohawaii_dev
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d alohawaii_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alohawaii-network

  # API Service
  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    container_name: alohawaii-api
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/alohawaii_dev
      - NEXTAUTH_URL=http://localhost:4000
      - NODE_ENV=development
    env_file:
      - ../api/.env.local
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../api:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - alohawaii-network

  # Staff Hub Dashboard
  hub:
    build:
      context: ../hub
      dockerfile: Dockerfile
    container_name: alohawaii-hub
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_URL=http://localhost:3000
      - API_URL=http://api:4000
      - NODE_ENV=development
    env_file:
      - ../hub/.env.local
    depends_on:
      - api
    volumes:
      - ../hub:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - alohawaii-network
    profiles:
      - hub # Only start with --profile hub

volumes:
  postgres_data:

networks:
  alohawaii-network:
    driver: bridge
